generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  name         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  subscription Boolean
}

model Admin {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  password   String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  token      String?  @unique
  PrivateKey String?
  PublicKey  String?
}

model News {
  id         Int       @id @default(autoincrement())
  title      String
  content    String    @db.Text
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  tipsId     Int
  tips       Tips      @relation(fields: [tipsId], references: [id], onDelete: Cascade)
  status     Boolean   @default(false)
  sendTime   DateTime?
  sendStatus Boolean   @default(false)
}

model Cron {
  id        Int       @id @default(autoincrement())
  name      String
  startTime DateTime
  schedule  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  status    Boolean   @default(false)
  lastRun   DateTime?
  nextRun   DateTime?
}

model Tips {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  news        News[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Log {
  id        Int      @id @default(autoincrement())
  level     String // INFO, WARN, ERROR, etc.
  message   String
  context   String? // Service or class name
  timestamp DateTime @default(now())
  metadata  Json? // Additional structured data
  service   String // Service name (e.g., "cron-service")
  userId    String? // Optional user context
  traceId   String? // For distributed tracing

  @@index([level])
  @@index([timestamp])
  @@index([service])
}
